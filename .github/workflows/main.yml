name: Build SocketCan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04  # 使用 Ubuntu 22.04 作为基础运行环境

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Set up the working directory
      run: cd /home/runner/work/Socket-Can/Socket-Can

    - name: Install ARM64 cross-compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu openjdk-17-jdk-headless

    - name: Find OpenJDK Path
      id: jdk-path
      run: |
          JAVA_HOME=$(sudo update-alternatives --query java | grep 'Value: ' | cut -d' ' -f2 | sed 's/\/bin\/java//')
          echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
          echo "Found JAVA_HOME at $JAVA_HOME"

    - name: Verify JDK installation
      run: |
        ls -la /usr/lib/jvm/temurin-11-jdk-amd64/include
        ls -la /usr/lib/jvm/temurin-11-jdk-amd64/include/linux

  
    - name: Configure CMake
      run: cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 ..

    - name: Build JNI project for ARM64
      run: |
        mkdir -p build && cd build
        cmake .. -DCMAKE_SYSTEM_NAME=Linux \
                 -DCMAKE_SYSTEM_PROCESSOR=aarch64 \
                 -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \
                 -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ \
                 -DJAVA_AWT_INCLUDE_PATH=/usr/lib/jvm/temurin-11-jdk-amd64/include \
                 -DJAVA_AWT_LIBRARY=/usr/lib/jvm/temurin-11-jdk-amd64/lib \
                 -DJAVA_JVM_LIBRARY=/usr/lib/jvm/temurin-11-jdk-amd64/lib/server \
                 -DJAVA_INCLUDE_PATH=/usr/lib/jvm/temurin-11-jdk-amd64/include \
                 -DJAVA_INCLUDE_PATH2=/usr/lib/jvm/temurin-11-jdk-amd64/include/linux
        make

    - name: Verify Build Output
      run: ls -la build
